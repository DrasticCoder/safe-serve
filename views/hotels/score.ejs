<!DOCTYPE html>
<html>
  <head>
    <title><%= hotel.name %> | Score</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style>
      body {
        font-family: Arial, sans-serif;
        background-color: #fddecc;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
      }
      .container {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        margin-top: 20px;
        width: 90%;
        max-width: 800px;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
      }
      h1 {
        color: #333;
        margin-bottom: 15px;
      }
      p {
        color: #555;
        font-size: 18px;
        margin: 5px 0;
      }

      .score-gauge {
        position: relative;
        width: 100%;
        height: 200px;
        border-radius: 50%;
        background: conic-gradient(#007bff 0%, #eee 0%);
        border: 10px solid #007bff;
        box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.2);
        transition: background 1s ease-in-out;
        transform: rotate(-90deg);
        margin: 20px 0;
      }

      .score-wrap {
        margin-top: -2rem;
        position: relative;
      }
      .score-wrap h1 {
        margin-bottom: 0;
        font-size: 48px;
      }
      .score-wrap p {
        font-size: 18px;
      }

      .button {
        display: inline-block;
        padding: 10px 20px;
        margin-top: 20px;
        background-color: #ff9900;
        color: #fff;
        border-radius: 5px;
        text-decoration: none;
        cursor: pointer;
      }
      .button-secondary {
        display: inline-block;
        padding: 10px 20px;
        margin-top: 20px;
        background-color: #f4f4f4;
        color: #333;
        border: none;
        border-radius: 5px;
        text-decoration: none;
        margin-right: 10px;
      }

      /* Accordion Styles */

      .accordion-content {
        padding: 0 15px;
        display: none;
        overflow: hidden;
        background-color: #fffdfd;
        border: 1px dashed #ccc;
        border-radius: 5px;
        margin-top: 10px;
      }
      .accordion-content p {
        margin: 10px 0;
      }

      /* Star Rating Styles */
      .star-container {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 5px;
        font-size: 50px;
        margin-top: 20px;
      }

      .star {
        cursor: pointer;
        width: 50px;
        height: 50px;
        scale: 0.7;
        color: #ffd439;
        transition: transform 0.2s;
      }

      .star:hover {
        transform: scale(1.2);
      }

      .star.filled path {
        fill: #fad059;
      }

      textarea {
        width: 60%;
        height: 100px;
        padding: 10px;
        margin-top: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        resize: none;
      }
      figure {
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20px;
        width: 100px;
      }

        figure img {
            width: 100%;
            height: 100%;
            /* border: 2px solid #ddd; */
            border-radius: 8px;
        }

      /* Responsive styles */
      @media (max-width: 600px) {
        .score-wrap h1 {
          font-size: 24px;
        }
        .container {
          padding: 10px;
        }
        .button,
        .button-secondary {
          padding: 8px 16px;
          font-size: 14px;
        }
        #gaugeCanvas {
          width: 100% !important;
          height: auto !important;
        }
      }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/gaugeJS/dist/gauge.min.js"></script>
  </head>
  <body>
    <div class="container">
        <figure>
            <img src="/assets/logo.png" alt="HygienePro">
        </figure>
      <h1><%= hotel.name %></h1>
      <p id="hotelId" style="display: none;"><%= hotel._id %></p>

      <div id="gaugeContainer">
        <canvas id="gaugeCanvas" width="400" height="200"></canvas>
      </div>
      <div class="score-wrap">
        <h1 class="score">8.3</h1>
        <p>Hygiene Rating</p>
      </div>
      <div class="stars-wrapper">
        <div class="star-container" id="starRating">
          <div class="star" data-value="1">☆</div>
          <div class="star" data-value="2">☆</div>
          <div class="star" data-value="3">☆</div>
          <div class="star" data-value="4">☆</div>
          <div class="star" data-value="5">☆</div>
        </div>
      </div>
        <textarea name="comment" id="comment" placeholder="Your comment here..."></textarea>
        <button type="button" class="button" id="submitReview" >Submit</button>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Gauge options
        var opts = {
          angle: 0,
          lineWidth: 0.4,
          radiusScale: 1,
          pointer: {
            length: 0.5,
            strokeWidth: 0.051,
            color: "#000000",
          },
          staticZones: [
            { strokeStyle: "#ff0000", min: 0, max: 2 },
            { strokeStyle: "#f03e3e", min: 2, max: 4 },
            { strokeStyle: "#ffcf07", min: 4, max: 6 },
            { strokeStyle: "#aff01f", min: 6, max: 8 },
            { strokeStyle: "#23c01b", min: 8, max: 10 },
          ],
          limitMax: false,
          limitMin: false,
          colorStart: "#6FADCF",
          colorStop: "#8FC0DA",
          strokeColor: "#E0E0E0",
          generateGradient: true,
          percentColors: [
            [0.0, "#ff0000"],
            [0.5, "#f9c802"],
            [1.0, "#a9d70b"],
          ],
          highDpiSupport: true,
        };

        // Target your canvas element
        var target = document.getElementById("gaugeCanvas");

        // Create a new gauge
        var gauge = new Gauge(target).setOptions(opts);

        // Set the max value of the gauge
        gauge.maxValue = 10;
        gauge.setMinValue(0);

        // Set animation speed
        gauge.animationSpeed = 20;

        // Set the actual value
        gauge.set(7);

        // Function to draw the rating labels
        function drawLabels() {
          var ctx = target.getContext("2d");
          ctx.font = "12px Arial";
          ctx.fillStyle = "#000000";
          ctx.textAlign = "center";

          var centerX = target.width / 2;
          var centerY = target.height / 1.5;
          var radius = 90;

          for (var i = 0; i <= 10; i++) {
            var angle = Math.PI / 2 + (i * Math.PI) / 11;
            var x = centerX + radius * Math.cos(angle);
            var y = centerY - radius * Math.sin(angle);

            ctx.fillText(i, x, y);
          }
        }

        // Draw the labels
        drawLabels();

        // Accordion functionality
        var acc = document.getElementsByClassName("accordion-button");
        for (var i = 0; i < acc.length; i++) {
          acc[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            // if (content.style.display === "block") {
            //   content.style.display = "none";
            // } else {
            //   content.style.display = "block";
            // }
          });
        }

        // Star rating functionality
        const stars = document.querySelectorAll(".star");
        let rating = 0;

        stars.forEach((star, index) => {
          star.addEventListener("mouseover", () => {
            stars.forEach((s, i) => {
              if (i <= index) {
                s.innerHTML = "★";
                // s.querySelector("path").setAttribute("fill", "#fad059");
              } else {
                s.innerHTML = "☆";
                // s.querySelector("path").setAttribute("fill", "none");
              }
            });
          });

          star.addEventListener("mouseout", () => {
            stars.forEach((s, i) => {
              if (i < rating) {
                s.innerHTML = "★";
                // s.querySelector("path").setAttribute("fill", "#fad059");
              } else {
                s.innerHTML = "☆";
                // s.querySelector("path").setAttribute("fill", "none");
              }
            });
          });

          star.addEventListener("click", () => {
            rating = index + 1;
            console.log("Point=" + rating);
          });
        });

        // Submit review functionality
        const hotelId = document.getElementById("hotelId").textContent;
        const submitReview = document.getElementById("submitReview");
        submitReview.addEventListener("click", () => {
          const comment = document.getElementById("comment").value;
          console.log("Rating: " + rating);
          console.log("comment: " + comment);
          // Send POST request to /hotels/review/id
          fetch(`/hotels/review/${hotelId}`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              rating: rating,
              comment: comment,
            }),
          })
            .then(console.log("Review submitted"))
            .then((data) => {
              console.log(data);
              // Handle response data
            })
            .catch((error) => {
              console.error("Error:", error);
              // Handle error
            });
        });
      });
    </script>
  </body>
</html>
